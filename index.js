require('dotenv').config();
const { Telegraf } = require('telegraf');
const Locale  = require('./locale/index');
const schedule = require('node-schedule');
const {TELEGRAM_BOT_TOKEN, GROUP_CHAT_ID} = process.env;
const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

// TODO: -API –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–∞—Ç, –ë–î –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —à–µ–¥—É–ª–µ—Ä

// –†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞—Ö
schedule.scheduleJob('0 0 * * *', () => {
    const birthdayPeople = getBirthdayPeople();
    if (birthdayPeople.length > 0) {
        const chatId = GROUP_CHAT_ID; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã
        const message = `üéâ –°–µ–≥–æ–¥–Ω—è –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è: ${birthdayPeople.join(', ')}`;
        bot.telegram.sendMessage(chatId, message);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
    console.log('—Å—Ç–∞—Ä—Ç—É–µ–º!', Locale.get('hello'))
    ctx.reply(Locale.get('hello'))
});
bot.help((ctx) => {
// –≤—ã–∑—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏—É—Ç—É—Ä—É —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏-–∫–æ–º–∞–Ω–¥–∞–º–∏
    console.log('—Ç–µ–∫—É—â–∞—è –ª–æ–∫–∞–ª—å ---->', Locale.getCurrentLocale())
    console.log('–∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ---->', ctx);
    // –Ω—É–∂–Ω–∞ –º–∏–¥–ª–≤—ç—Ä–∏–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
        ctx.replyWithChatAction('typing')
            .then(() => {
                ctx.reply(Locale.get('choose_help'), {
                    reply_markup: {
                        keyboard: [
                            ['/kk', '/ru', '/help'],
                            ['/sendPoll']
                        ],
                        resize_keyboard: true,
                        one_time_keyboard: false
                    }
                });
            });
})

bot.command('kk', (ctx) => {
    Locale.setLocale('kk')
    ctx.reply('–í—ã–±—Ä–∞–Ω –∫–∞–∑–∞—Ö—Å–∫–∏–π —è–∑—ã–∫')
})
bot.command('ru', (ctx) => {
    Locale.setLocale('ru')
    ctx.reply('–í—ã–±—Ä–∞–Ω —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫')
})
bot.command('sendPoll', (ctx) => {
    const
        question = "–ö–∞–∫ –≤–∞–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è?",
        options = ['–û—Ç–ª–∏—á–Ω–æ', '–•–æ—Ä–æ—à–æ', '–¢–∞–∫ —Å–µ–±–µ'],
        correctOptionIndex = 0; // –ò–Ω–¥–µ–∫—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ options
    ctx.replyWithQuiz(question, options, { correct_option_id: correctOptionIndex });
})

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
bot.hears(['–î–†', '–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è'], (ctx) => {
    console.log('–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç —Å –î–†')
    const birthdayPeople = getBirthdayPeople();

    if (birthdayPeople.length === 0) {
        ctx.reply('–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –ø—Ä–∞–∑–¥–Ω—É—é—â–∏—Ö –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.');
    } else {
        ctx.reply('–°–µ–≥–æ–¥–Ω—è –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è:');
        birthdayPeople.forEach((person) => {
            ctx.reply(`üéâ ${person}`);
        });
        const chatId = GROUP_CHAT_ID;
        const message = `üéâ –°–µ–≥–æ–¥–Ω—è –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è: ${birthdayPeople.join(', ')}`;
        bot.telegram.sendMessage(chatId, message);
    }
});



// –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç
bot.launch();

function getBirthdayPeople() {
    return ['–ò–º—è1', '–ò–º—è2'];
}
